/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menu.informes;

import funcionalidad.BaseDatos;
import funcionalidad.Sistema;
import javax.swing.JFrame;
import menu.E_Herramental;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;

/**
 *
 * @author sauls
 */
public class Informes extends javax.swing.JFrame {

    private DefaultTableModel table;
    private String nombre;
    BaseDatos bd=new BaseDatos(); 
    Sistema s=new Sistema();
    /**
     * Creates new form Informes
     */
    public Informes() {
        initComponents();
        cargar();
    }
    
    public Informes (E_Herramental htal, DefaultTableModel tab,String nombre){
        this.table=tab;
        this.nombre=nombre;
        this.setTitle(this.nombre);
        initComponents();
        cargar();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);//Se usa un listener en el metodo cerrar ventana para detectar 
        // Cuando se debe activar la ventana padre 
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent e) {
                htal.setEnabled(true); // Reactivar la ventana padre al cerrar
                htal.toFront(); // Asegurar que la ventana padre esté al frente
                htal.refresco();
            }
        });
    }
    public final void cargar(){
        ta.setModel(table);
    }
    public void exportarExcel(DefaultTableModel model, String nombre) throws IOException {
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos de Excel", "xls");
        chooser.setFileFilter(filter);
        chooser.setDialogTitle("Guardar archivo");

        // Configurar el nombre del archivo sugerido
        chooser.setSelectedFile(new File(nombre + ".xls"));

        if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            String ruta = chooser.getSelectedFile().toString();

            // Verificar que la extensión sea correcta
            if (!ruta.endsWith(".xls")) {
                ruta += ".xls";
            }

            try {
                File archivoXLS = new File(ruta);
                if (archivoXLS.exists()) {
                    archivoXLS.delete();
                }
                archivoXLS.createNewFile();

                Workbook libro = new HSSFWorkbook();
                FileOutputStream archivo = new FileOutputStream(archivoXLS);
                Sheet hoja = libro.createSheet("Datos");
                hoja.setDisplayGridlines(false);

                // Escribir encabezados
                Row filaEncabezado = hoja.createRow(0);
                for (int c = 0; c < model.getColumnCount(); c++) {
                    Cell celda = filaEncabezado.createCell(c);
                    celda.setCellValue(model.getColumnName(c));
                }

                // Escribir datos
                int filaInicio = 1;
                for (int f = 0; f < model.getRowCount(); f++) {
                    Row fila = hoja.createRow(filaInicio++);
                    for (int c = 0; c < model.getColumnCount(); c++) {
                        Cell celda = fila.createCell(c);
                        Object valor = model.getValueAt(f, c);
                        if (valor instanceof Number) {
                            celda.setCellValue(Double.parseDouble(valor.toString()));
                        } else {
                            celda.setCellValue(String.valueOf(valor));
                        }
                    }
                }

                // Guardar el archivo
                libro.write(archivo);
                archivo.close();

                // Abrir automáticamente el archivo
                Desktop.getDesktop().open(archivoXLS);
            } catch (IOException | NumberFormatException e) {
                throw e;
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informe", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 14))); // NOI18N

        ta= new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int colIndex){
                return false;
            }
        };
        ta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                taMouseClicked(evt);
            }
        });
        ta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                taKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(ta);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.setText("Exportar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void taMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_taMouseClicked
        // TODO add your handling code here:
        //Es preferible

        int rowSelect=ta.getSelectedRow();
//        //System.out.println(""+rowSelect);
//        op.setId_empt(ta.getValueAt(rowSelect, 0).toString());
//        op.setNum_emp(ta.getValueAt(rowSelect, 1).toString());
//        op.setNombre(ta.getValueAt(rowSelect, 2).toString());
//        op.setLinea(bd.lineaNum(ta.getValueAt(rowSelect, 3).toString()));
//        op.setTurno(bd.turnonum(ta.getValueAt(rowSelect, 4).toString()));
//        op.setObservaciones(""+ta.getValueAt(rowSelect, 5));
//        op.impOp();
//        id_tarjeta.setText(op.getId_empt());
//        num_operario.setText(op.getNum_emp());
//        nombre.setText(op.getNombre());
//        linea.setSelectedItem(ta.getValueAt(rowSelect, 3).toString());
//        turno.setSelectedItem(ta.getValueAt(rowSelect, 4).toString());
//        observaciones.setText(op.getObservaciones()+" ");

    }//GEN-LAST:event_taMouseClicked

    private void taKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taKeyPressed
        // TODO add your handling code here:
        //No es funcional
    }//GEN-LAST:event_taKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Exportar a excel
        String [] datos={"El archivo se genero: ",bd.fechaActual()};
        table.addRow(datos);
        try {
            this.exportarExcel(table, nombre);
            s.info("El archivo se ha Exportado con exito.... ");
            dispose();
        } catch (IOException ex) {
           ex.printStackTrace();
           s.error("Ha ocurrido un error al exportar... ");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Informes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Informes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Informes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Informes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Informes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable ta;
    // End of variables declaration//GEN-END:variables
}
